### src=>(r32+d)

#### R,(mem)

:push  (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0b0100 { push16(addr8d32); }
:pushw (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0b0100 { push16(addr16d32); }
:rld   A,(addr8d32)             is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; A & op_00_07=0b0110 { }
:rrd   A,(addr8d32)             is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; A & op_00_07=0b0111 { }
:ld    (addr16),(addr16d32)     is w_op_04_07=0b1000 & w_op_03=0b1 & addr16d32 ; op_00_07=0x19 ; addr16 { addr16 = addr16d32; }
:ldw   (addr16),(addr16d32)     is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x19 ; addr16 { addr16 = addr16d32; }
:ld    r8,(addr8d32)            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0010 & op_03=0b0 & r8  { r8 = addr8d32; }
:ld    r16,(addr16d32)          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = addr16d32; }
:ld    r32,(addr32d32)          is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = addr32d32; }
:ex    (addr8d32),r8            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0011 & op_03=0b0 & r8  {}
:ex    (addr16d32),r16          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x38 ; imm8  { add(addr8d32,imm8); }
:add   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x38 ; imm16 { add(addr16d32,imm16); }
:adc   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x39 ; imm8  { adc(addr8d32,imm8); }
:adc   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x39 ; imm16 { adc(addr16d32,imm16); }
:sub   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3a ; imm8  { sub(addr8d32,imm8); }
:sub   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3a ; imm16 { sub(addr16d32,imm16); }
:sbc   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3b ; imm8  { sbc(addr8d32,imm8); }
:sbc   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3b ; imm16 { sbc(addr16d32,imm16); }
:and   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3c ; imm8  { and(addr8d32,imm8); }
:and   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3c ; imm16 { and(addr16d32,imm16); }
:xor   (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3d ; imm8  { xor(addr8d32,imm8); }
:xor   (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3d ; imm16 { xor(addr16d32,imm16); }
:or    (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3e ; imm8  { or(addr8d32,imm8); }
:or    (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3e ; imm16 { or(addr16d32,imm16); }
:cp    (addr8d32),imm8          is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x3f ; imm8  { cp(addr8d32,imm8); }
:cp    (addr16d32),imm16        is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x3f ; imm16 { cp(addr16d32,imm16); }
:mul   r8,(addr8d32)            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,addr8d32); }
:mul   r16,(addr16d32)          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,addr16d32); }
:mul   r32,(addr32d32)          is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b0100 & op_03=0b0 & r32 { mul(r32,addr32d32); }
:muls  r8,(addr8d32)            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,addr8d32); }
:muls  r16,(addr16d32)          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,addr16d32); }
:muls  r32,(addr32d32)          is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b0100 & op_03=0b1 & r32 { muls(r32,addr32d32); }
:div   r8,(addr8d32)            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,addr8d32); }
:div   r16,(addr16d32)          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,addr16d32); }
:div   r32,(addr32d32)          is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b0101 & op_03=0b0 & r32 { div(r32,addr32d32); }
:divs  r8,(addr8d32)            is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,addr8d32); }
:divs  r16,(addr16d32)          is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,addr16d32); }
:divs  r32,(addr32d32)          is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b0101 & op_03=0b1 & r32 { divs(r32,addr32d32); }
:inc   imm3_00_02,(addr8d32)    is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr8d32,imm3_00_02); }
:incw  imm3_00_02,(addr16d32)   is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr16d32,imm3_00_02); }
:dec   imm3_00_02,(addr8d32)    is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr8d32,imm3_00_02); }
:decw  imm3_00_02,(addr16d32)   is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr16d32,imm3_00_02); }
:rlc   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x78 {}
:rlcw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x78 {}
:rrc   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x79 {}
:rrcw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x79 {}
:rl    (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7a {}
:rlw   (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7a {}
:rr    (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7b {}
:rrw   (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7b {}
:sla   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7c {}
:slaw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7c {}
:sra   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7d {}
:sraw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7d {}
:sll   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7e {}
:sllw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7e {}
:srl   (addr8d32)               is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_00_07=0x7f {}
:srlw  (addr16d32)              is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_00_07=0x7f {}

:add   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,addr8d32); }
:add   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,addr16d32); }
:add   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,addr32d32); }
:adc   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,addr8d32); }
:adc   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,addr16d32); }
:adc   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,addr32d32); }
:sub   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,addr8d32); }
:sub   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,addr16d32); }
:sub   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,addr32d32); }
:sbc   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,addr8d32); }
:sbc   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,addr16d32); }
:sbc   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,addr32d32); }
:and   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(addr8d32)); }
:and   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,addr16d32); }
:and   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,addr32d32); }
:xor   r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,addr8d32); }
:xor   r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,addr16d32); }
:xor   r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,addr32d32); }
:or    r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,addr8d32); }
:or    r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,addr16d32); }
:or    r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,addr32d32); }
:cp    r8,(addr8d32)        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,addr8d32); }
:cp    r16,(addr16d32)      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,addr16d32); }
:cp    r32,(addr32d32)      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,addr32d32); }

#### (mem),R

:add   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1000 & op_03=0b1 & r8  { add(addr8d32,r8); }
:add   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(addr16d32,r16); }
:add   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(addr32d32,r32); }
:adc   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(addr8d32,r8); }
:adc   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(addr16d32,r16); }
:adc   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(addr32d32,r32); }
:sub   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(addr8d32,r8); }
:sub   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(addr16d32,r16); }
:sub   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(addr32d32,r32); }
:sbc   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(addr8d32,r8); }
:sbc   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(addr16d32,r16); }
:sbc   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(addr32d32,r32); }
:and   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1100 & op_03=0b1 & r8  { and(addr8d32,r8); }
:and   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(addr16d32,r16); }
:and   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(addr32d32,r32); }
:xor   (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(addr8d32,r8); }
:xor   (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(addr16d32,r16); }
:xor   (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(addr32d32,r32); }
:or    (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1110 & op_03=0b1 & r8  { or(addr8d32,r8); }
:or    (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(addr16d32,r16); }
:or    (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(addr32d32,r32); }
:cp    (addr8d32),r8        is w_op_04_07=0b1000 & w_op_03=0b1 & addr8d32  ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(addr8d32,r8); }
:cp    (addr16d32),r16      is w_op_04_07=0b1001 & w_op_03=0b1 & addr16d32 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(addr16d32,r16); }
:cp    (addr32d32),r32      is w_op_04_07=0b1010 & w_op_03=0b1 & addr32d32 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(addr32d32,r32); }

### src=>(n)

#### R,(mem)

:push  (addr8i32)          is op_00_07=0xc0 ; addr8i32 ; op_00_07=0x04 { push16(addr8i32); }
:pushw (addr8i32)          is op_00_07=0xd0 ; addr8i32 ; op_00_07=0x04 { push16(addr8i32); }
:rld   A,(addr8i32)        is op_00_07=0xc0 ; addr8i32 ; A & op_00_07=0x6 { }
:rrd   A,(addr8i32)        is op_00_07=0xc0 ; addr8i32 ; A & op_00_07=0x7 { }
:ld    (addr16),(addr8i16) is op_00_07=0xc0 ; addr8i16 ; op_00_07=0x19 ; addr16 { addr16 = addr8i16; }
:ldw   (addr16),(addr8i16) is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x19 ; addr16 { addr16 = addr8i16; }
:ld    r8,(addr8i8)        is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = addr8i8; }
:ld    r16,(addr8i16)      is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = addr8i16; }
:ld    r32,(addr8i32)      is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = addr8i32; }
:ex    (addr8i32),r8       is op_00_07=0xc0 ; addr8i32 ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (addr8i32),r16      is op_00_07=0xd0 ; addr8i32 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x38 ; imm8 { add(addr8i8,imm8); }
:add   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x38 ; imm16 { add(addr8i16,imm16); }
:adc   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x39 ; imm8 { adc(addr8i8,imm8); }
:adc   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x39 ; imm16 { adc(addr8i16,imm16); }
:sub   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3a ; imm8 { sub(addr8i8,imm8); }
:sub   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3a ; imm16 { sub(addr8i16,imm16); }
:sbc   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3b ; imm8 { sbc(addr8i8,imm8); }
:sbc   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3b ; imm16 { sbc(addr8i16,imm16); }
:and   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3c ; imm8 { and(addr8i8,imm8); }
:and   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3c ; imm16 { and(addr8i16,imm16); }
:xor   (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3d ; imm8 { xor(addr8i8,imm8); }
:xor   (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3d ; imm16 { xor(addr8i16,imm16); }
:or    (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3e ; imm8 { or(addr8i8,imm8); }
:or    (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3e ; imm16 { or(addr8i16,imm16); }
:cp    (addr8i8),imm8      is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x3f ; imm8 { cp(addr8i8,imm8); }
:cp    (addr8i16),imm16    is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x3f ; imm16 { cp(addr8i16,imm16); }
:mul   r8,(addr8i8)        is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,addr8i8); }
:mul   r16,(addr8i16)      is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,addr8i16); }
:muls  r8,(addr8i8)        is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,addr8i8); }
:muls  r16,(addr8i16)      is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,addr8i16); }
:div   r8,(addr8i8)        is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,addr8i8); }
:div   r16,(addr8i16)      is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,addr8i16); }
:divs  r8,(addr8i8)        is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,addr8i8); }
:divs  r16,(addr8i16)      is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,addr8i16); }
:inc   imm3_00_02,(addr8i8)   is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr8i8,imm3_00_02); }
:incw  imm3_00_02,(addr8i16)  is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr8i16,imm3_00_02); }
:dec   imm3_00_02,(addr8i8)   is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr8i8,imm3_00_02); }
:decw  imm3_00_02,(addr8i16)  is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr8i16,imm3_00_02); }
:rlc   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x78 {}
:rlcw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x78 {}
:rrc   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x79 {}
:rrcw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x79 {}
:rl    (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7a {}
:rlw   (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7a {}
:rr    (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7b {}
:rrw   (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7b {}
:sla   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7c {}
:slaw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7c {}
:sra   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7d {}
:sraw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7d {}
:sll   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7e {}
:sllw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7e {}
:srl   (addr8i8)           is op_00_07=0xc0 ; addr8i8  ; op_00_07=0x7f {}
:srlw  (addr8i16)          is op_00_07=0xd0 ; addr8i16 ; op_00_07=0x7f {}

:add   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,addr8i8); }
:add   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,addr8i16); }
:add   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,addr8i32); }
:adc   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,addr8i8); }
:adc   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,addr8i16); }
:adc   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,addr8i32); }
:sub   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,addr8i8); }
:sub   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,addr8i16); }
:sub   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,addr8i32); }
:sbc   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,addr8i8); }
:sbc   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,addr8i16); }
:sbc   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,addr8i32); }
:and   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(addr8i8)); }
:and   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,addr8i16); }
:and   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,addr8i32); }
:xor   r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,addr8i8); }
:xor   r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,addr8i16); }
:xor   r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,addr8i32); }
:or    r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,addr8i8); }
:or    r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,addr8i16); }
:or    r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,addr8i32); }
:cp    r8,(addr8i8)       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,addr8i8); }
:cp    r16,(addr8i16)     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,addr8i16); }
:cp    r32,(addr8i32)     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,addr8i32); }

#### (mem),R

:add   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1000 & op_03=0b1 & r8  { add(addr8i8,r8); }
:add   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(addr8i16,r16); }
:add   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(addr8i32,r32); }
:adc   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(addr8i8,r8); }
:adc   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(addr8i16,r16); }
:adc   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(addr8i32,r32); }
:sub   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(addr8i8,r8); }
:sub   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(addr8i16,r16); }
:sub   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(addr8i32,r32); }
:sbc   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(addr8i8,r8); }
:sbc   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(addr8i16,r16); }
:sbc   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(addr8i32,r32); }
:and   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1100 & op_03=0b1 & r8  { and(addr8i8,r8); }
:and   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(addr8i16,r16); }
:and   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(addr8i32,r32); }
:xor   (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(addr8i8,r8); }
:xor   (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(addr8i16,r16); }
:xor   (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(addr8i32,r32); }
:or    (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1110 & op_03=0b1 & r8  { or(addr8i8,r8); }
:or    (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(addr8i16,r16); }
:or    (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(addr8i32,r32); }
:cp    (addr8i8),r8       is op_00_07=0xc0 ; addr8i8  ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(addr8i8,r8); }
:cp    (addr8i16),r16     is op_00_07=0xd0 ; addr8i16 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(addr8i16,r16); }
:cp    (addr8i32),r32     is op_00_07=0xe0 ; addr8i32 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(addr8i32,r32); }

### src=>(nn)

#### R,(mem)

:push  (addr16i32)          is op_00_07=0xc1 ; addr16i32 ; op_00_07=0x04 { push16(addr16i32); }
:pushw (addr16i32)          is op_00_07=0xd1 ; addr16i32 ; op_00_07=0x04 { push16(addr16i32); }
:rld   A,(addr16i32)        is op_00_07=0xc1 ; addr16i32 ; A & op_00_07=0x6 { }
:rrd   A,(addr16i32)        is op_00_07=0xc1 ; addr16i32 ; A & op_00_07=0x7 { }
:ld    (addr16),(addr16i16) is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x19 ; addr16 { addr16 = addr16i16; }
:ldw   (addr16),(addr16i16) is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x19 ; addr16 { addr16 = addr16i16; }
:ld    r8,(addr16i16)       is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = addr16i16:1; }
:ld    r16,(addr16i16)      is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = addr16i16; }
:ld    r32,(addr16i32)      is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = addr16i32; }
:ex    (addr16i32),r8       is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (addr16i32),r16      is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x38 ; imm8  { add(addr16i16,imm8); }
:add   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x38 ; imm16 { add(addr16i16,imm16); }
:adc   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x39 ; imm8  { adc(addr16i16,imm8); }
:adc   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x39 ; imm16 { adc(addr16i16,imm16); }
:sub   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3a ; imm8  { sub(addr16i16,imm8); }
:sub   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3a ; imm16 { sub(addr16i16,imm16); }
:sbc   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3b ; imm8  { sbc(addr16i16,imm8); }
:sbc   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3b ; imm16 { sbc(addr16i16,imm16); }
:and   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3c ; imm8  { and(addr16i16,imm8); }
:and   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3c ; imm16 { and(addr16i16,imm16); }
:xor   (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3d ; imm8  { xor(addr16i16,imm8); }
:xor   (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3d ; imm16 { xor(addr16i16,imm16); }
:or    (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3e ; imm8  { or(addr16i16,imm8); }
:or    (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3e ; imm16 { or(addr16i16,imm16); }
:cp    (addr16i16),imm8     is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x3f ; imm8  { cp(addr16i16,imm8); }
:cp    (addr16i16),imm16    is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x3f ; imm16 { cp(addr16i16,imm16); }
:mul   r8,(addr16i16)       is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,addr16i16:1); }
:mul   r16,(addr16i16)      is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,addr16i16); }
:muls  r8,(addr16i16)       is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,addr16i16:1); }
:muls  r16,(addr16i16)      is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,addr16i16); }
:div   r8,(addr16i16)       is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,addr16i16:1); }
:div   r16,(addr16i16)      is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,addr16i16); }
:divs  r8,(addr16i16)       is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,addr16i16:1); }
:divs  r16,(addr16i16)      is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,addr16i16); }
:inc   imm3_00_02,(addr16i16)  is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr16i16,imm3_00_02); }
:incw  imm3_00_02,(addr16i16)  is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr16i16,imm3_00_02); }
:dec   imm3_00_02,(addr16i16)  is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr16i16,imm3_00_02); }
:decw  imm3_00_02,(addr16i16)  is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr16i16,imm3_00_02); }
:rlc   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x78 {}
:rlcw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x78 {}
:rrc   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x79 {}
:rrcw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x79 {}
:rl    (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7a {}
:rlw   (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7a {}
:rr    (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7b {}
:rrw   (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7b {}
:sla   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7c {}
:slaw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7c {}
:sra   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7d {}
:sraw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7d {}
:sll   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7e {}
:sllw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7e {}
:srl   (addr16i16)          is op_00_07=0xc1 ; addr16i16 ; op_00_07=0x7f {}
:srlw  (addr16i16)          is op_00_07=0xd1 ; addr16i16 ; op_00_07=0x7f {}

:add   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,addr16i16:1); }
:add   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,addr16i16); }
:add   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,addr16i32); }
:adc   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,addr16i16:1); }
:adc   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,addr16i16); }
:adc   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,addr16i32); }
:sub   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,addr16i16:1); }
:sub   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,addr16i16); }
:sub   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,addr16i32); }
:sbc   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,addr16i16:1); }
:sbc   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,addr16i16); }
:sbc   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,addr16i32); }
:and   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(addr16i16:1)); }
:and   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,addr16i16); }
:and   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,addr16i32); }
:xor   r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,addr16i16:1); }
:xor   r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,addr16i16); }
:xor   r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,addr16i32); }
:or    r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,addr16i16:1); }
:or    r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,addr16i16); }
:or    r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,addr16i32); }
:cp    r8,(addr16i16)      is op_00_07=0xc1 ; addr16i16 ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,addr16i16:1); }
:cp    r16,(addr16i16)     is op_00_07=0xd1 ; addr16i16 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,addr16i16); }
:cp    r32,(addr16i32)     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,addr16i32); }

#### (mem),R

:add   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1000 & op_03=0b1 & r8  { add(addr16i32,zext(r8)); }
:add   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(addr16i32,zext(r16)); }
:add   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(addr16i32,r32); }
:adc   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(addr16i32,zext(r8)); }
:adc   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(addr16i32,zext(r16)); }
:adc   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(addr16i32,r32); }
:sub   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(addr16i32,zext(r8)); }
:sub   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(addr16i32,zext(r16)); }
:sub   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(addr16i32,r32); }
:sbc   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(addr16i32,zext(r8)); }
:sbc   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(addr16i32,zext(r16)); }
:sbc   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(addr16i32,r32); }
:and   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1100 & op_03=0b1 & r8  { and(addr16i32,zext(r8)); }
:and   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(addr16i32,zext(r16)); }
:and   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(addr16i32,r32); }
:xor   (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(addr16i32,zext(r8)); }
:xor   (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(addr16i32,zext(r16)); }
:xor   (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(addr16i32,r32); }
:or    (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1110 & op_03=0b1 & r8  { or(addr16i32,zext(r8)); }
:or    (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(addr16i32,zext(r16)); }
:or    (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(addr16i32,r32); }
:cp    (addr16i32),r8      is op_00_07=0xc1 ; addr16i32 ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(addr16i32,zext(r8)); }
:cp    (addr16i32),r16     is op_00_07=0xd1 ; addr16i32 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(addr16i32,zext(r16)); }
:cp    (addr16i32),r32     is op_00_07=0xe1 ; addr16i32 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(addr16i32,r32); }

### src=>(nnn)

#### R,(mem)

:push  (addr24i32)          is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x04 { push16(addr24i32); }
:pushw (addr24i32)          is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x04 { push16(addr24i32); }
:rld   A,(addr24i32)        is op_00_07=0xc2 ; addr24i32 ; A & op_00_07=0x6 { }
:rrd   A,(addr24i32)        is op_00_07=0xc2 ; addr24i32 ; A & op_00_07=0x7 { }
:ld    (addr16),(addr24i16) is op_00_07=0xc2 ; addr24i16 ; op_00_07=0x19 ; addr16 { addr16 = addr24i16; }
:ldw   (addr16),(addr24i16) is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x19 ; addr16 { addr16 = addr24i16; }
:ld    r8,(addr24i8)        is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = addr24i8; }
:ld    r16,(addr24i16)      is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = addr24i16; }
:ld    r32,(addr24i32)      is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = addr24i32; }
:ex    (addr24i32),r8       is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (addr24i32),r16      is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x38 ; imm8 { add(addr24i32,imm8); }
:add   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x38 ; imm16 { add(addr24i32,imm16); }
:adc   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x39 ; imm8 { adc(addr24i32,imm8); }
:adc   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x39 ; imm16 { adc(addr24i32,imm16); }
:sub   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3a ; imm8 { sub(addr24i32,imm8); }
:sub   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3a ; imm16 { sub(addr24i32,imm16); }
:sbc   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3b ; imm8 { sbc(addr24i32,imm8); }
:sbc   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3b ; imm16 { sbc(addr24i32,imm16); }
:and   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3c ; imm8 { and(addr24i32,imm8); }
:and   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3c ; imm16 { and(addr24i32,imm16); }
:xor   (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3d ; imm8 { xor(addr24i32,imm8); }
:xor   (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3d ; imm16 { xor(addr24i32,imm16); }
:or    (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3e ; imm8 { or(addr24i32,imm8); }
:or    (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3e ; imm16 { or(addr24i32,imm16); }
:cp    (addr24i32),imm8     is op_00_07=0xc2 ; addr24i32 ; op_00_07=0x3f ; imm8 { cp(addr24i32,imm8); }
:cp    (addr24i32),imm16    is op_00_07=0xd2 ; addr24i32 ; op_00_07=0x3f ; imm16 { cp(addr24i32,imm16); }
:mul   r8,(addr24i8)        is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,addr24i8); }
:mul   r16,(addr24i16)      is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,addr24i16); }
:muls  r8,(addr24i8)        is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,addr24i8); }
:muls  r16,(addr24i16)      is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,addr24i16); }
:div   r8,(addr24i8)        is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,addr24i8); }
:div   r16,(addr24i16)      is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,addr24i16); }
:divs  r8,(addr24i8)        is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,addr24i8); }
:divs  r16,(addr24i16)      is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,addr24i16); }
:inc   imm3_00_02,(addr24i24)  is op_00_07=0xc2 ; addr24i24 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr24i24,imm3_00_02); }
:incw  imm3_00_02,(addr24i24)  is op_00_07=0xd2 ; addr24i24 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(addr24i24,imm3_00_02); }
:dec   imm3_00_02,(addr24i24)  is op_00_07=0xc2 ; addr24i24 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr24i24,imm3_00_02); }
:decw  imm3_00_02,(addr24i24)  is op_00_07=0xd2 ; addr24i24 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(addr24i24,imm3_00_02); }
:rlc   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x78 {}
:rlcw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x78 {}
:rrc   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x79 {}
:rrcw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x79 {}
:rl    (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7a {}
:rlw   (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7a {}
:rr    (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7b {}
:rrw   (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7b {}
:sla   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7c {}
:slaw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7c {}
:sra   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7d {}
:sraw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7d {}
:sll   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7e {}
:sllw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7e {}
:srl   (addr24i8)           is op_00_07=0xc2 ; addr24i8  ; op_00_07=0x7f {}
:srlw  (addr24i16)          is op_00_07=0xd2 ; addr24i16 ; op_00_07=0x7f {}

:add   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,addr24i8); }
:add   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,addr24i16); }
:add   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,addr24i32); }
:adc   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,addr24i8); }
:adc   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,addr24i16); }
:adc   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,addr24i32); }
:sub   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,addr24i8); }
:sub   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,addr24i16); }
:sub   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,addr24i32); }
:sbc   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,addr24i8); }
:sbc   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,addr24i16); }
:sbc   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,addr24i32); }
:and   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(addr24i8)); }
:and   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,addr24i16); }
:and   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,addr24i32); }
:xor   r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,addr24i8); }
:xor   r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,addr24i16); }
:xor   r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,addr24i32); }
:or    r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,addr24i8); }
:or    r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,addr24i16); }
:or    r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,addr24i32); }
:cp    r8,(addr24i8)       is op_00_07=0xc2 ; addr24i8  ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,addr24i8); }
:cp    r16,(addr24i16)     is op_00_07=0xd2 ; addr24i16 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,addr24i16); }
:cp    r32,(addr24i32)     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,addr24i32); }

#### (mem),R

:add   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1000 & op_03=0b1 & r8  { add(addr24i32,zext(r8)); }
:add   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(addr24i32,zext(r16)); }
:add   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(addr24i32,r32); }
:adc   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(addr24i32,zext(r8)); }
:adc   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(addr24i32,zext(r16)); }
:adc   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(addr24i32,r32); }
:sub   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(addr24i32,zext(r8)); }
:sub   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(addr24i32,zext(r16)); }
:sub   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(addr24i32,r32); }
:sbc   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(addr24i32,zext(r8)); }
:sbc   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(addr24i32,zext(r16)); }
:sbc   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(addr24i32,r32); }
:and   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1100 & op_03=0b1 & r8  { and(addr24i32,zext(r8)); }
:and   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(addr24i32,zext(r16)); }
:and   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(addr24i32,r32); }
:xor   (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(addr24i32,zext(r8)); }
:xor   (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(addr24i32,zext(r16)); }
:xor   (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(addr24i32,r32); }
:or    (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1110 & op_03=0b1 & r8  { or(addr24i32,zext(r8)); }
:or    (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(addr24i32,zext(r16)); }
:or    (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(addr24i32,r32); }
:cp    (addr24i32),r8      is op_00_07=0xc2 ; addr24i32 ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(addr24i32,zext(r8)); }
:cp    (addr24i32),r16     is op_00_07=0xd2 ; addr24i32 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(addr24i32,zext(r16)); }
:cp    (addr24i32),r32     is op_00_07=0xe2 ; addr24i32 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(addr24i32,r32); }

### src=>(mem)

#### R,(mem)

:push  (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x04 { push16(r32b_d00); }
:pushw (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x04 { push16(r32b_d00); }
:rld   A,(r32b_d00)        is op_00_07=0xc3 ; r32b_d00 ; A & op_00_07=0x6 { }
:rrd   A,(r32b_d00)        is op_00_07=0xc3 ; r32b_d00 ; A & op_00_07=0x7 { }
:ld    (addr16),(r32b_d00) is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x19 ; addr16 { addr16 = r32b_d00:2; }
:ldw   (addr16),(r32b_d00) is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x19 ; addr16 { addr16 = r32b_d00:2; }
:ld    r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = r32b_d00:1; }
:ld    r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = r32b_d00:2; }
:ld    r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = r32b_d00; }
:ex    (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x38 ; imm8 { add(r32b_d00,imm8); }
:add   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x38 ; imm16 { add(r32b_d00,imm16); }
:adc   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x39 ; imm8 { adc(r32b_d00,imm8); }
:adc   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x39 ; imm16 { adc(r32b_d00,imm16); }
:sub   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3a ; imm8 { sub(r32b_d00,imm8); }
:sub   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3a ; imm16 { sub(r32b_d00,imm16); }
:sbc   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3b ; imm8 { sbc(r32b_d00,imm8); }
:sbc   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3b ; imm16 { sbc(r32b_d00,imm16); }
:and   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3c ; imm8 { and(r32b_d00,imm8); }
:and   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3c ; imm16 { and(r32b_d00,imm16); }
:xor   (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3d ; imm8 { xor(r32b_d00,imm8); }
:xor   (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3d ; imm16 { xor(r32b_d00,imm16); }
:or    (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3e ; imm8 { or(r32b_d00,imm8); }
:or    (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3e ; imm16 { or(r32b_d00,imm16); }
:cp    (r32b_d00),imm8     is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x3f ; imm8 { cp(r32b_d00,imm8); }
:cp    (r32b_d00),imm16    is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x3f ; imm16 { cp(r32b_d00,imm16); }
:mul   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,r32b_d00:1); }
:mul   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,r32b_d00:2); }
:muls  r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,r32b_d00:1); }
:muls  r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,r32b_d00:2); }
:div   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,r32b_d00:1); }
:div   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,r32b_d00:2); }
:divs  r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,r32b_d00:1); }
:divs  r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,r32b_d00:2); }
:inc   imm3_00_02,(r32b_d00)  is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_d00,imm3_00_02); }
:incw  imm3_00_02,(r32b_d00)  is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_d00,imm3_00_02); }
:dec   imm3_00_02,(r32b_d00)  is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_d00,imm3_00_02); }
:decw  imm3_00_02,(r32b_d00)  is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_d00,imm3_00_02); }
:rlc   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x78 {}
:rlcw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x78 {}
:rrc   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x79 {}
:rrcw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x79 {}
:rl    (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7a {}
:rlw   (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7a {}
:rr    (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7b {}
:rrw   (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7b {}
:sla   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7c {}
:slaw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7c {}
:sra   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7d {}
:sraw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7d {}
:sll   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7e {}
:sllw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7e {}
:srl   (r32b_d00)          is op_00_07=0xc3 ; r32b_d00 ; op_00_07=0x7f {}
:srlw  (r32b_d00)          is op_00_07=0xd3 ; r32b_d00 ; op_00_07=0x7f {}

:add   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,r32b_d00:1); }
:add   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,r32b_d00:2); }
:add   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,r32b_d00); }
:adc   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,r32b_d00:1); }
:adc   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,r32b_d00:2); }
:adc   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,r32b_d00); }
:sub   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,r32b_d00:1); }
:sub   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,r32b_d00:2); }
:sub   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,r32b_d00); }
:sbc   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,r32b_d00:1); }
:sbc   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,r32b_d00:2); }
:sbc   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,r32b_d00); }
:and   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(r32b_d00:1)); }
:and   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,r32b_d00:2); }
:and   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,r32b_d00); }
:xor   r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,r32b_d00:1); }
:xor   r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,r32b_d00:2); }
:xor   r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,r32b_d00); }
:or    r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,r32b_d00:1); }
:or    r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,r32b_d00:2); }
:or    r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,r32b_d00); }
:cp    r8,(r32b_d00)       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,r32b_d00:1); }
:cp    r16,(r32b_d00)      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,r32b_d00:2); }
:cp    r32,(r32b_d00)      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,r32b_d00); }

#### (mem),R

:add   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b1 & r8  { add(r32b_d00,zext(r8)); }
:add   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(r32b_d00,zext(r16)); }
:add   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(r32b_d00,r32); }
:adc   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(r32b_d00,zext(r8)); }
:adc   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(r32b_d00,zext(r16)); }
:adc   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(r32b_d00,r32); }
:sub   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(r32b_d00,zext(r8)); }
:sub   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(r32b_d00,zext(r16)); }
:sub   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(r32b_d00,r32); }
:sbc   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(r32b_d00,zext(r8)); }
:sbc   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(r32b_d00,zext(r16)); }
:sbc   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(r32b_d00,r32); }
:and   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b1 & r8  { and(r32b_d00,zext(r8)); }
:and   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(r32b_d00,zext(r16)); }
:and   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(r32b_d00,r32); }
:xor   (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(r32b_d00,zext(r8)); }
:xor   (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(r32b_d00,zext(r16)); }
:xor   (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(r32b_d00,r32); }
:or    (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b1 & r8  { or(r32b_d00,zext(r8)); }
:or    (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(r32b_d00,zext(r16)); }
:or    (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(r32b_d00,r32); }
:cp    (r32b_d00),r8       is op_00_07=0xc3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(r32b_d00,zext(r8)); }
:cp    (r32b_d00),r16      is op_00_07=0xd3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(r32b_d00,zext(r16)); }
:cp    (r32b_d00),r32      is op_00_07=0xe3 ; r32b_d00 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(r32b_d00,r32); }

### src=>(mem+d16)

#### R,(mem)

:push  (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x04 { push16(r32b_d16); }
:pushw (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x04 { push16(r32b_d16); }
:rld   A,(r32b_d16)        is op_00_07=0xc3 ; r32b_d16 ; A & op_00_07=0x6 { }
:rrd   A,(r32b_d16)        is op_00_07=0xc3 ; r32b_d16 ; A & op_00_07=0x7 { }
:ld    (addr16),(r32b_d16) is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x19 ; addr16 { addr16 = r32b_d16:2; }
:ldw   (addr16),(r32b_d16) is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x19 ; addr16 { addr16 = r32b_d16:2; }
:ld    r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = r32b_d16:1; }
:ld    r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = r32b_d16:2; }
:ld    r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = r32b_d16; }
:ex    (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x38 ; imm8 { add(r32b_d16,imm8); }
:add   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x38 ; imm16 { add(r32b_d16,imm16); }
:adc   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x39 ; imm8 { adc(r32b_d16,imm8); }
:adc   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x39 ; imm16 { adc(r32b_d16,imm16); }
:sub   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3a ; imm8 { sub(r32b_d16,imm8); }
:sub   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3a ; imm16 { sub(r32b_d16,imm16); }
:sbc   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3b ; imm8 { sbc(r32b_d16,imm8); }
:sbc   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3b ; imm16 { sbc(r32b_d16,imm16); }
:and   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3c ; imm8 { and(r32b_d16,imm8); }
:and   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3c ; imm16 { and(r32b_d16,imm16); }
:xor   (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3d ; imm8 { xor(r32b_d16,imm8); }
:xor   (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3d ; imm16 { xor(r32b_d16,imm16); }
:or    (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3e ; imm8 { or(r32b_d16,imm8); }
:or    (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3e ; imm16 { or(r32b_d16,imm16); }
:cp    (r32b_d16),imm8     is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x3f ; imm8 { cp(r32b_d16,imm8); }
:cp    (r32b_d16),imm16    is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x3f ; imm16 { cp(r32b_d16,imm16); }
:mul   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,r32b_d16:1); }
:mul   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,r32b_d16:2); }
:muls  r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,r32b_d16:1); }
:muls  r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,r32b_d16:2); }
:div   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,r32b_d16:1); }
:div   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,r32b_d16:2); }
:divs  r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,r32b_d16:1); }
:divs  r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,r32b_d16:2); }
:inc   imm3_00_02,(r32b_d16)  is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_d16,imm3_00_02); }
:incw  imm3_00_02,(r32b_d16)  is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_d16,imm3_00_02); }
:dec   imm3_00_02,(r32b_d16)  is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_d16,imm3_00_02); }
:decw  imm3_00_02,(r32b_d16)  is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_d16,imm3_00_02); }
:rlc   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x78 {}
:rlcw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x78 {}
:rrc   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x79 {}
:rrcw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x79 {}
:rl    (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7a {}
:rlw   (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7a {}
:rr    (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7b {}
:rrw   (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7b {}
:sla   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7c {}
:slaw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7c {}
:sra   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7d {}
:sraw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7d {}
:sll   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7e {}
:sllw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7e {}
:srl   (r32b_d16)          is op_00_07=0xc3 ; r32b_d16 ; op_00_07=0x7f {}
:srlw  (r32b_d16)          is op_00_07=0xd3 ; r32b_d16 ; op_00_07=0x7f {}

:add   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,r32b_d16:1); }
:add   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,r32b_d16:2); }
:add   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,r32b_d16); }
:adc   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,r32b_d16:1); }
:adc   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,r32b_d16:2); }
:adc   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,r32b_d16); }
:sub   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,r32b_d16:1); }
:sub   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,r32b_d16:2); }
:sub   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,r32b_d16); }
:sbc   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,r32b_d16:1); }
:sbc   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,r32b_d16:2); }
:sbc   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,r32b_d16); }
:and   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(r32b_d16:1)); }
:and   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,r32b_d16:2); }
:and   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,r32b_d16); }
:xor   r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,r32b_d16:1); }
:xor   r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,r32b_d16:2); }
:xor   r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,r32b_d16); }
:or    r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,r32b_d16:1); }
:or    r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,r32b_d16:2); }
:or    r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,r32b_d16); }
:cp    r8,(r32b_d16)       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,r32b_d16:1); }
:cp    r16,(r32b_d16)      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,r32b_d16:2); }
:cp    r32,(r32b_d16)      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,r32b_d16); }

#### (mem),R

:add   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b1 & r8  { add(r32b_d16,zext(r8)); }
:add   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b1 & r16 { add(r32b_d16,zext(r16)); }
:add   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1000 & op_03=0b1 & r32 { add(r32b_d16,r32); }
:adc   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(r32b_d16,zext(r8)); }
:adc   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(r32b_d16,zext(r16)); }
:adc   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(r32b_d16,r32); }
:sub   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(r32b_d16,zext(r8)); }
:sub   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(r32b_d16,zext(r16)); }
:sub   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(r32b_d16,r32); }
:sbc   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(r32b_d16,zext(r8)); }
:sbc   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(r32b_d16,zext(r16)); }
:sbc   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(r32b_d16,r32); }
:and   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b1 & r8  { and(r32b_d16,zext(r8)); }
:and   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b1 & r16 { and(r32b_d16,zext(r16)); }
:and   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1100 & op_03=0b1 & r32 { and(r32b_d16,r32); }
:xor   (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(r32b_d16,zext(r8)); }
:xor   (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(r32b_d16,zext(r16)); }
:xor   (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(r32b_d16,r32); }
:or    (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b1 & r8  { or(r32b_d16,zext(r8)); }
:or    (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b1 & r16 { or(r32b_d16,zext(r16)); }
:or    (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1110 & op_03=0b1 & r32 { or(r32b_d16,r32); }
:cp    (r32b_d16),r8       is op_00_07=0xc3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(r32b_d16,zext(r8)); }
:cp    (r32b_d16),r16      is op_00_07=0xd3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(r32b_d16,zext(r16)); }
:cp    (r32b_d16),r32      is op_00_07=0xe3 ; r32b_d16 ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(r32b_d16,r32); }

### src=>(mem+drb)

#### R,(mem)

:push  (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x04 { push16(r32b_drb); }
:pushw (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x04 { push16(r32b_drb); }
:rld   A,(r32b_drb)        is op_00_07=0xc3 ; r32b_drb ; A & op_00_07=0x6 { }
:rrd   A,(r32b_drb)        is op_00_07=0xc3 ; r32b_drb ; A & op_00_07=0x7 { }
:ld    (addr16),(r32b_drb) is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x19 ; addr16 { addr16 = r32b_drb:2; }
:ldw   (addr16),(r32b_drb) is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x19 ; addr16 { addr16 = r32b_drb:2; }
:ld    r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = r32b_drb:1; }
:ld    r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = r32b_drb:2; }
:ld    r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = r32b_drb; }
:ex    (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x38 ; imm8 { add(r32b_drb,imm8); }
:add   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x38 ; imm16 { add(r32b_drb,imm16); }
:adc   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x39 ; imm8 { adc(r32b_drb,imm8); }
:adc   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x39 ; imm16 { adc(r32b_drb,imm16); }
:sub   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3a ; imm8 { sub(r32b_drb,imm8); }
:sub   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3a ; imm16 { sub(r32b_drb,imm16); }
:sbc   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3b ; imm8 { sbc(r32b_drb,imm8); }
:sbc   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3b ; imm16 { sbc(r32b_drb,imm16); }
:and   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3c ; imm8 { and(r32b_drb,imm8); }
:and   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3c ; imm16 { and(r32b_drb,imm16); }
:xor   (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3d ; imm8 { xor(r32b_drb,imm8); }
:xor   (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3d ; imm16 { xor(r32b_drb,imm16); }
:or    (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3e ; imm8 { or(r32b_drb,imm8); }
:or    (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3e ; imm16 { or(r32b_drb,imm16); }
:cp    (r32b_drb),imm8     is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x3f ; imm8 { cp(r32b_drb,imm8); }
:cp    (r32b_drb),imm16    is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x3f ; imm16 { cp(r32b_drb,imm16); }
:mul   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,r32b_drb:1); }
:mul   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,r32b_drb:2); }
:muls  r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,r32b_drb:1); }
:muls  r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,r32b_drb:2); }
:div   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,r32b_drb:1); }
:div   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,r32b_drb:2); }
:divs  r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,r32b_drb:1); }
:divs  r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,r32b_drb:2); }
:inc   imm3_00_02,(r32b_drb)  is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_drb,imm3_00_02); }
:incw  imm3_00_02,(r32b_drb)  is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_drb,imm3_00_02); }
:dec   imm3_00_02,(r32b_drb)  is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_drb,imm3_00_02); }
:decw  imm3_00_02,(r32b_drb)  is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_drb,imm3_00_02); }
:rlc   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x78 {}
:rlcw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x78 {}
:rrc   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x79 {}
:rrcw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x79 {}
:rl    (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7a {}
:rlw   (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7a {}
:rr    (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7b {}
:rrw   (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7b {}
:sla   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7c {}
:slaw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7c {}
:sra   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7d {}
:sraw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7d {}
:sll   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7e {}
:sllw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7e {}
:srl   (r32b_drb)          is op_00_07=0xc3 ; r32b_drb ; op_00_07=0x7f {}
:srlw  (r32b_drb)          is op_00_07=0xd3 ; r32b_drb ; op_00_07=0x7f {}

:add   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,r32b_drb:1); }
:add   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,r32b_drb:2); }
:add   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,r32b_drb); }
:adc   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,r32b_drb:1); }
:adc   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,r32b_drb:2); }
:adc   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,r32b_drb); }
:sub   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,r32b_drb:1); }
:sub   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,r32b_drb:2); }
:sub   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,r32b_drb); }
:sbc   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,r32b_drb:1); }
:sbc   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,r32b_drb:2); }
:sbc   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,r32b_drb); }
:and   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(r32b_drb:1)); }
:and   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,r32b_drb:2); }
:and   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,r32b_drb); }
:xor   r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,r32b_drb:1); }
:xor   r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,r32b_drb:2); }
:xor   r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,r32b_drb); }
:or    r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,r32b_drb:1); }
:or    r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,r32b_drb:2); }
:or    r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,r32b_drb); }
:cp    r8,(r32b_drb)       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,r32b_drb:1); }
:cp    r16,(r32b_drb)      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,r32b_drb:2); }
:cp    r32,(r32b_drb)      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,r32b_drb); }

#### (mem),R

:add   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b1 & r8  { add(r32b_drb,zext(r8)); }
:add   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b1 & r16 { add(r32b_drb,zext(r16)); }
:add   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1000 & op_03=0b1 & r32 { add(r32b_drb,r32); }
:adc   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(r32b_drb,zext(r8)); }
:adc   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(r32b_drb,zext(r16)); }
:adc   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(r32b_drb,r32); }
:sub   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(r32b_drb,zext(r8)); }
:sub   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(r32b_drb,zext(r16)); }
:sub   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(r32b_drb,r32); }
:sbc   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(r32b_drb,zext(r8)); }
:sbc   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(r32b_drb,zext(r16)); }
:sbc   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(r32b_drb,r32); }
:and   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b1 & r8  { and(r32b_drb,zext(r8)); }
:and   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b1 & r16 { and(r32b_drb,zext(r16)); }
:and   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1100 & op_03=0b1 & r32 { and(r32b_drb,r32); }
:xor   (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(r32b_drb,zext(r8)); }
:xor   (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(r32b_drb,zext(r16)); }
:xor   (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(r32b_drb,r32); }
:or    (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b1 & r8  { or(r32b_drb,zext(r8)); }
:or    (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b1 & r16 { or(r32b_drb,zext(r16)); }
:or    (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1110 & op_03=0b1 & r32 { or(r32b_drb,r32); }
:cp    (r32b_drb),r8       is op_00_07=0xc3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(r32b_drb,zext(r8)); }
:cp    (r32b_drb),r16      is op_00_07=0xd3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(r32b_drb,zext(r16)); }
:cp    (r32b_drb),r32      is op_00_07=0xe3 ; r32b_drb ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(r32b_drb,r32); }

### src=>(-xrr)

#### R,(mem)

:push  (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x04 { push16(r32b_pre); }
:pushw (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x04 { push16(r32b_pre); }
:rld   A,(r32b_pre)        is op_00_07=0xc4 ; r32b_pre ; A & op_00_07=0x6 { }
:rrd   A,(r32b_pre)        is op_00_07=0xc4 ; r32b_pre ; A & op_00_07=0x7 { }
:ld    (addr16),(r32b_pre) is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x19 ; addr16 { addr16 = r32b_pre:2; }
:ldw   (addr16),(r32b_pre) is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x19 ; addr16 { addr16 = r32b_pre:2; }
:ld    r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = r32b_pre:1; }
:ld    r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = r32b_pre:2; }
:ld    r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = r32b_pre; }
:ex    (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x38 ; imm8 { add(r32b_pre,imm8); }
:add   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x38 ; imm16 { add(r32b_pre,imm16); }
:adc   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x39 ; imm8 { adc(r32b_pre,imm8); }
:adc   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x39 ; imm16 { adc(r32b_pre,imm16); }
:sub   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3a ; imm8 { sub(r32b_pre,imm8); }
:sub   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3a ; imm16 { sub(r32b_pre,imm16); }
:sbc   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3b ; imm8 { sbc(r32b_pre,imm8); }
:sbc   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3b ; imm16 { sbc(r32b_pre,imm16); }
:and   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3c ; imm8 { and(r32b_pre,imm8); }
:and   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3c ; imm16 { and(r32b_pre,imm16); }
:xor   (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3d ; imm8 { xor(r32b_pre,imm8); }
:xor   (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3d ; imm16 { xor(r32b_pre,imm16); }
:or    (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3e ; imm8 { or(r32b_pre,imm8); }
:or    (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3e ; imm16 { or(r32b_pre,imm16); }
:cp    (r32b_pre),imm8     is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x3f ; imm8 { cp(r32b_pre,imm8); }
:cp    (r32b_pre),imm16    is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x3f ; imm16 { cp(r32b_pre,imm16); }
:mul   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,r32b_pre:1); }
:mul   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,r32b_pre:2); }
:muls  r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,r32b_pre:1); }
:muls  r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,r32b_pre:2); }
:div   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,r32b_pre:1); }
:div   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,r32b_pre:2); }
:divs  r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,r32b_pre:1); }
:divs  r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,r32b_pre:2); }
:inc   imm3_00_02,(r32b_pre)  is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_pre,imm3_00_02); }
:incw  imm3_00_02,(r32b_pre)  is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_pre,imm3_00_02); }
:dec   imm3_00_02,(r32b_pre)  is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_pre,imm3_00_02); }
:decw  imm3_00_02,(r32b_pre)  is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_pre,imm3_00_02); }
:rlc   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x78 {}
:rlcw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x78 {}
:rrc   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x79 {}
:rrcw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x79 {}
:rl    (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7a {}
:rlw   (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7a {}
:rr    (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7b {}
:rrw   (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7b {}
:sla   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7c {}
:slaw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7c {}
:sra   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7d {}
:sraw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7d {}
:sll   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7e {}
:sllw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7e {}
:srl   (r32b_pre)          is op_00_07=0xc4 ; r32b_pre ; op_00_07=0x7f {}
:srlw  (r32b_pre)          is op_00_07=0xd4 ; r32b_pre ; op_00_07=0x7f {}

:add   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,r32b_pre:1); }
:add   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,r32b_pre:2); }
:add   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,r32b_pre); }
:adc   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,r32b_pre:1); }
:adc   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,r32b_pre:2); }
:adc   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,r32b_pre); }
:sub   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,r32b_pre:1); }
:sub   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,r32b_pre:2); }
:sub   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,r32b_pre); }
:sbc   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,r32b_pre:1); }
:sbc   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,r32b_pre:2); }
:sbc   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,r32b_pre); }
:and   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(r32b_pre:1)); }
:and   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,r32b_pre:2); }
:and   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,r32b_pre); }
:xor   r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,r32b_pre:1); }
:xor   r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,r32b_pre:2); }
:xor   r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,r32b_pre); }
:or    r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,r32b_pre:1); }
:or    r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,r32b_pre:2); }
:or    r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,r32b_pre); }
:cp    r8,(r32b_pre)       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,r32b_pre:1); }
:cp    r16,(r32b_pre)      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,r32b_pre:2); }
:cp    r32,(r32b_pre)      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,r32b_pre); }

#### (mem),R

:add   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b1 & r8  { add(r32b_pre,zext(r8)); }
:add   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b1 & r16 { add(r32b_pre,zext(r16)); }
:add   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1000 & op_03=0b1 & r32 { add(r32b_pre,r32); }
:adc   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(r32b_pre,zext(r8)); }
:adc   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(r32b_pre,zext(r16)); }
:adc   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(r32b_pre,r32); }
:sub   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(r32b_pre,zext(r8)); }
:sub   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(r32b_pre,zext(r16)); }
:sub   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(r32b_pre,r32); }
:sbc   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(r32b_pre,zext(r8)); }
:sbc   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(r32b_pre,zext(r16)); }
:sbc   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(r32b_pre,r32); }
:and   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b1 & r8  { and(r32b_pre,zext(r8)); }
:and   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b1 & r16 { and(r32b_pre,zext(r16)); }
:and   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1100 & op_03=0b1 & r32 { and(r32b_pre,r32); }
:xor   (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(r32b_pre,zext(r8)); }
:xor   (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(r32b_pre,zext(r16)); }
:xor   (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(r32b_pre,r32); }
:or    (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b1 & r8  { or(r32b_pre,zext(r8)); }
:or    (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b1 & r16 { or(r32b_pre,zext(r16)); }
:or    (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1110 & op_03=0b1 & r32 { or(r32b_pre,r32); }
:cp    (r32b_pre),r8       is op_00_07=0xc4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(r32b_pre,zext(r8)); }
:cp    (r32b_pre),r16      is op_00_07=0xd4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(r32b_pre,zext(r16)); }
:cp    (r32b_pre),r32      is op_00_07=0xe4 ; r32b_pre ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(r32b_pre,r32); }

### src=>(xrr+)

#### R,(mem)

:push  (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x04 { push16(r32b_pos); }
:pushw (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x04 { push16(r32b_pos); }
:rld   A,(r32b_pos)        is op_00_07=0xc5 ; r32b_pos ; A & op_00_07=0x6 { }
:rrd   A,(r32b_pos)        is op_00_07=0xc5 ; r32b_pos ; A & op_00_07=0x7 { }
:ld    (addr16),(r32b_pos) is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x19 ; addr16 { addr16 = r32b_pos:2; }
:ldw   (addr16),(r32b_pos) is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x19 ; addr16 { addr16 = r32b_pos:2; }
:ld    r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0010 & op_03=0b0 & r8 { r8 = r32b_pos:1; }
:ld    r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0010 & op_03=0b0 & r16 { r16 = r32b_pos:2; }
:ld    r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b0010 & op_03=0b0 & r32 { r32 = r32b_pos; }
:ex    (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0011 & op_03=0b0 & r8 {}
:ex    (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0011 & op_03=0b0 & r16 {}
:add   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x38 ; imm8 { add(r32b_pos,imm8); }
:add   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x38 ; imm16 { add(r32b_pos,imm16); }
:adc   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x39 ; imm8 { adc(r32b_pos,imm8); }
:adc   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x39 ; imm16 { adc(r32b_pos,imm16); }
:sub   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3a ; imm8 { sub(r32b_pos,imm8); }
:sub   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3a ; imm16 { sub(r32b_pos,imm16); }
:sbc   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3b ; imm8 { sbc(r32b_pos,imm8); }
:sbc   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3b ; imm16 { sbc(r32b_pos,imm16); }
:and   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3c ; imm8 { and(r32b_pos,imm8); }
:and   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3c ; imm16 { and(r32b_pos,imm16); }
:xor   (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3d ; imm8 { xor(r32b_pos,imm8); }
:xor   (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3d ; imm16 { xor(r32b_pos,imm16); }
:or    (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3e ; imm8 { or(r32b_pos,imm8); }
:or    (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3e ; imm16 { or(r32b_pos,imm16); }
:cp    (r32b_pos),imm8     is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x3f ; imm8 { cp(r32b_pos,imm8); }
:cp    (r32b_pos),imm16    is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x3f ; imm16 { cp(r32b_pos,imm16); }
:mul   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0100 & op_03=0b0 & r8  { mul(r8,r32b_pos:1); }
:mul   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0100 & op_03=0b0 & r16 { mul(r16,r32b_pos:2); }
:muls  r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0100 & op_03=0b1 & r8  { muls(r8,r32b_pos:1); }
:muls  r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0100 & op_03=0b1 & r16 { muls(r16,r32b_pos:2); }
:div   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0101 & op_03=0b0 & r8  { div(r8,r32b_pos:1); }
:div   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0101 & op_03=0b0 & r16 { div(r16,r32b_pos:2); }
:divs  r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0101 & op_03=0b1 & r8  { divs(r8,r32b_pos:1); }
:divs  r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0101 & op_03=0b1 & r16 { divs(r16,r32b_pos:2); }
:inc   imm3_00_02,(r32b_pos)  is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_pos,imm3_00_02); }
:incw  imm3_00_02,(r32b_pos)  is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0110 & op_03=0b0 & imm3_00_02 { add(r32b_pos,imm3_00_02); }
:dec   imm3_00_02,(r32b_pos)  is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_pos,imm3_00_02); }
:decw  imm3_00_02,(r32b_pos)  is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b0110 & op_03=0b1 & imm3_00_02 { sub(r32b_pos,imm3_00_02); }
:rlc   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x78 {}
:rlcw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x78 {}
:rrc   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x79 {}
:rrcw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x79 {}
:rl    (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7a {}
:rlw   (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7a {}
:rr    (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7b {}
:rrw   (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7b {}
:sla   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7c {}
:slaw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7c {}
:sra   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7d {}
:sraw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7d {}
:sll   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7e {}
:sllw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7e {}
:srl   (r32b_pos)          is op_00_07=0xc5 ; r32b_pos ; op_00_07=0x7f {}
:srlw  (r32b_pos)          is op_00_07=0xd5 ; r32b_pos ; op_00_07=0x7f {}

:add   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b0 & r8  { add(r8,r32b_pos:1); }
:add   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b0 & r16 { add(r16,r32b_pos:2); }
:add   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b0 & r32 { add(r32,r32b_pos); }
:adc   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b0 & r8  { adc(r8,r32b_pos:1); }
:adc   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b0 & r16 { adc(r16,r32b_pos:2); }
:adc   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b0 & r32 { adc(r32,r32b_pos); }
:sub   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b0 & r8  { sub(r8,r32b_pos:1); }
:sub   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b0 & r16 { sub(r16,r32b_pos:2); }
:sub   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b0 & r32 { sub(r32,r32b_pos); }
:sbc   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b0 & r8  { sbc(r8,r32b_pos:1); }
:sbc   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b0 & r16 { sbc(r16,r32b_pos:2); }
:sbc   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b0 & r32 { sbc(r32,r32b_pos); }
:and   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b0 & r8  { and(r8,(r32b_pos:1)); }
:and   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b0 & r16 { and(r16,r32b_pos:2); }
:and   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b0 & r32 { and(r32,r32b_pos); }
:xor   r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b0 & r8  { xor(r8,r32b_pos:1); }
:xor   r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b0 & r16 { xor(r16,r32b_pos:2); }
:xor   r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b0 & r32 { xor(r32,r32b_pos); }
:or    r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b0 & r8  { or(r8,r32b_pos:1); }
:or    r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b0 & r16 { or(r16,r32b_pos:2); }
:or    r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b0 & r32 { or(r32,r32b_pos); }
:cp    r8,(r32b_pos)       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b0 & r8  { cp(r8,r32b_pos:1); }
:cp    r16,(r32b_pos)      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b0 & r16 { cp(r16,r32b_pos:2); }
:cp    r32,(r32b_pos)      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b0 & r32 { cp(r32,r32b_pos); }

#### (mem),R

:add   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b1 & r8  { add(r32b_pos,zext(r8)); }
:add   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b1 & r16 { add(r32b_pos,zext(r16)); }
:add   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1000 & op_03=0b1 & r32 { add(r32b_pos,r32); }
:adc   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b1 & r8  { adc(r32b_pos,zext(r8)); }
:adc   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b1 & r16 { adc(r32b_pos,zext(r16)); }
:adc   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1001 & op_03=0b1 & r32 { adc(r32b_pos,r32); }
:sub   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b1 & r8  { sub(r32b_pos,zext(r8)); }
:sub   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b1 & r16 { sub(r32b_pos,zext(r16)); }
:sub   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1010 & op_03=0b1 & r32 { sub(r32b_pos,r32); }
:sbc   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b1 & r8  { sbc(r32b_pos,zext(r8)); }
:sbc   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b1 & r16 { sbc(r32b_pos,zext(r16)); }
:sbc   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1011 & op_03=0b1 & r32 { sbc(r32b_pos,r32); }
:and   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b1 & r8  { and(r32b_pos,zext(r8)); }
:and   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b1 & r16 { and(r32b_pos,zext(r16)); }
:and   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1100 & op_03=0b1 & r32 { and(r32b_pos,r32); }
:xor   (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b1 & r8  { xor(r32b_pos,zext(r8)); }
:xor   (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b1 & r16 { xor(r32b_pos,zext(r16)); }
:xor   (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1101 & op_03=0b1 & r32 { xor(r32b_pos,r32); }
:or    (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b1 & r8  { or(r32b_pos,zext(r8)); }
:or    (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b1 & r16 { or(r32b_pos,zext(r16)); }
:or    (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1110 & op_03=0b1 & r32 { or(r32b_pos,r32); }
:cp    (r32b_pos),r8       is op_00_07=0xc5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b1 & r8  { cp(r32b_pos,zext(r8)); }
:cp    (r32b_pos),r16      is op_00_07=0xd5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b1 & r16 { cp(r32b_pos,zext(r16)); }
:cp    (r32b_pos),r32      is op_00_07=0xe5 ; r32b_pos ; op_04_07=0b1111 & op_03=0b1 & r32 { cp(r32b_pos,r32); }
